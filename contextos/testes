# Detector de Plágio e Paráfrase

Este projeto implementa um sistema para **comparar textos** por duas abordagens complementares:  
- **Léxica** – análise baseada em padrões de palavras (TF-IDF e n-gramas).  
- **Semântica** – análise baseada no significado (embeddings com `sentence-transformers`).  

O objetivo é combinar essas análises para obter uma avaliação robusta da similaridade textual, útil para detecção de plágio, identificação de paráfrases e comparação de conteúdos de domínio público.  

O projeto foi pensado para rodar **tanto localmente quanto via Docker**, garantindo que o ambiente seja reprodutível e que os resultados sejam consistentes.

Testes Automatizados
Os testes seguem princípios de isolamento, eficiência e clareza semântica:

Execução determinística, sem dependências externas.
Uso de mocks para simular partes pesadas do processamento.
Tempo de execução reduzido, viabilizando integração contínua.
Cobertura por módulo:

compare_lexical / compare_semantic – Verificam cálculos de similaridade e ranqueamento, inclusive com entradas vazias.
combine_scores – Testa a fusão ponderada de scores e aplicação correta das classificações.
pipeline_build_index / io_utils – Garante que a indexação e a persistência sejam reprodutíveis e seguras.
preprocess – Valida segmentação e manipulação de janelas, incluindo casos de borda.
config – Testa a leitura de parâmetros e preservação de valores padrão.
compare_service – Avalia a integração de todas as etapas e a estrutura final do retorno.
O GitHub Actions executa automaticamente toda a suíte de testes a cada push, bloqueando implantações se houver falhas.
